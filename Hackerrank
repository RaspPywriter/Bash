Your task is to use for loops to display only odd natural numbers from 1 to 99.
#!/bin/bash
for i in {1..99..2}
do
  echo "$i"
done

Given two integers, X and Y, find their sum, difference, product, and quotient.

Input Format

Two lines containing one integer each ( X and Y, respectively).

Constraints
-100<=X, Y<100 Y!=0

Output Format

Four lines containing the sum, difference (X-Y), product, and quotient (X/Y), respectively.
#!/bin/bash
read X
read Y
#if ["$X"<"-100"] || ["$Y" -g "100"] || ["$Y"=="0"]
if [ $X -ge -100 ] || [ $Y -le 100 ] || [ $Y==0 ] || [ $X!=" " ] ! [ $Y==" " ] || [ $X=~^[0-9]+$ ]
    then
    sum=`echo "$X+$Y" |bc`
    echo $sum
    difference=`echo "$X- $Y" |bc`
    echo $difference
    product=`echo "$X*$Y" |bc`
    echo $product
    quotient=`echo "$X/$Y" |bc`
    echo $quotient
fi

Given two integers, X and Y, identify whether X>Y or X<Y or X=Y.

Exactly one of the following lines:
- X is less than Y
- X is greater than Y
- X is equal to Y

#!/bin/bash
read X
read Y
if [ $X -lt $Y ]
    then
    echo "X is less than Y"

elif [ $X -gt $Y ]
    then
    echo "X is greater than Y"
else
    echo "X is equal to Y"
fi


Given three integers (X, Y, and Z) representing the three sides of a triangle, identify whether the triangle is Scalene,
Isosceles, or Equilateral.
Input Format

Three integers, each on a new line.

Constraints
1<=X, Y, Z <=1000
Sum of any two sides will be greater than the third.

Output Format

One word: either "SCALENE" or "EQUILATERAL" or "ISOSCELES" (quotation marks excluded).
First try that works:
#!/bin/bash
read X
read Y
read Z
if [ $X -ge 1 ] && [ $X -le 1000 ] && [ $Y -ge 1 ] && [ $Y -le 1000 ] && [ $Z -ge 1 ] && [ $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X )) && [ $X == $Y ] && [ $X == $Z ]
    then
    echo "EQUILATERAL"
elif [ $X -ge 1 ] && [ $X -le 1000 ] && [ $Y -ge 1 ] && [ $Y -le 1000 ] && [ $Z -ge 1 ] && [ $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X )) && [ $X != $Y ] && [ $X != $Z ] && [ $Z != $Y ]
    then
    echo "SCALENE"
elif [ $X -ge 1 ] && [ $X -le 1000 ] && [ $Y -ge 1 ] && [ $Y -le 1000 ] && [ $Z -ge 1 ] && [ $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X ))
    then
    echo "ISOSCELES"
fi
Version 2 (slightly more condensed)
#!/bin/bash
read X
read Y
read Z
if [ $X -ge 1 -a $X -le 1000 ] && [ $Y -ge 1 -a $Y -le 1000 ] && [ $Z -ge 1 -a $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X )) && [ $X == $Y ] && [ $X == $Z ]
    then
    echo "EQUILATERAL"
elif [ $X -ge 1 -a $X -le 1000 ] && [ $Y -ge 1 -a $Y -le 1000 ] && [ $Z -ge 1 -a $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X )) && [ $X != $Y ] && [ $X != $Z ] && [ $Z != $Y ]
    then
    echo "SCALENE"
elif [ $X -ge 1 -a $X -le 1000 ] && [ $Y -ge 1 -a $Y -le 1000 ] && [ $Z -ge 1 -a $Z -le 1000 ] && (( $X + $Y > $Z )) &&  (( $X + $Z > $Y )) &&  (( $Z + $Y > $X ))
    then
    echo "ISOSCELES"
fi

We provide you with expressions containing +,-,*,^, / and parenthesis. None of the numbers in the expression involved will exceed 999.
Your task is to evaluate the expression and display the correct output rounding up to 3 decimal places.
#!/bin/bash
read x
answer=`echo "$x" |bc -l`
round_answer=`printf "%.3f" $answer`
echo $round_answer
